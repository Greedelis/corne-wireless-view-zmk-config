/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    // QMK tap dances
    //     [TD_ESC_CAPS] = ACTION_TAP_DANCE_DOUBLE(KC_ESC, KC_CAPS),
    //     [TD_CTRL_SHIFT] = ACTION_TAP_DANCE_DOUBLE(KC_LCTL, KC_LSFT),
    //     [TD_GUI_ALT] = ACTION_TAP_DANCE_DOUBLE(KC_LGUI, KC_RALT),
    //     [TD_SHIFT_CTRL] = ACTION_TAP_DANCE_DOUBLE(KC_LSFT, KC_LCTL)

    behaviors {
        td_esc_caps: tap_dance_esccaps {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_ESC_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp CAPSLOCK>;
        };

        td_ctrl_shift: tap_dance_ctrlshift {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CTRL_SHIFT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LCTRL>, <&kp LSHIFT>;
        };

        td_shift_ctrl: tap_dance_shiftctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SHIFT_CTRL";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RSHIFT>, <&kp RCTRL>;
        };

        td_gui_alt: tap_dance_guialt {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_GUI_ALT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LGUI>, <&kp LALT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E        &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB         &kp A  &kp S  &kp D        &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&td_ctrl_shift  &kp Z  &kp X  &kp C        &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &td_shift_ctrl
                              &td_gui_alt  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp NON_US_BSLH  &kp N1  &kp N2  &kp N3    &kp N4   &kp N5       &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&kp F1           &kp F2  &kp F3  &kp F4    &kp F5   &kp F6       &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp F7           &kp F8  &kp F9  &kp F10   &kp F11  &kp F12      &trans    &trans    &trans    &trans     &trans  &trans
                                 &kp LGUI  &trans   &kp SPACE    &kp RET   &mo 3     &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&kp NON_US_BSLH  &kp LS(N1)  &kp LS(N2)    &kp LS(N3)    &kp LS(N4)  &kp LS(N5)    &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)  &kp MINUS
&kp TAB          &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &kp EQUAL     &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp BSLH    &kp GRAVE
&trans           &kp BSLH    &trans        &kp C_PP      &trans      &kp LBKT      &kp RBKT    &kp PLUS    &kp LBRC    &kp RBRC    &kp PIPE    &trans
                                           &kp LGUI      &mo 3       &kp SPACE     &kp RET     &trans      &kp RALT
            >;
        };

        middle_layer {
            label = "Middle";
            bindings = <
&kp NON_US_BSLH  &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT       &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &tog 4     &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans           &trans        &trans        &trans        &trans        &trans          &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &trans
                                             &kp LGUI      &trans        &kp SPACE       &kp RET    &trans     &kp RALT
            >;
        };

        game_layer {
            label = "Game";
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E        &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LSHIFT  &kp A  &kp S  &kp D        &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL   &kp Z  &kp X  &kp C        &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &td_shift_ctrl
                          &td_gui_alt  &mo 5  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        game_up_layer {
            label = "Game up";
            bindings = <
&kp ESC     &kp N1  &kp N2  &kp N3       &kp N4  &kp N5       &kp N6   &kp N7  &kp N8     &kp N9   &kp N0    &kp BSPC
&kp LSHIFT  &kp A   &kp S   &kp D        &kp F   &kp G        &tog 4   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL   &kp Z   &kp X   &kp C        &kp V   &kp B        &kp N    &kp M   &kp COMMA  &kp DOT  &kp FSLH  &td_shift_ctrl
                            &td_gui_alt  &mo 1   &kp SPACE    &kp RET  &mo 2   &kp RALT
            >;
        };
    };
};
